<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" 
		   width="100%" height="100%" 
		   xmlns:s="library://ns.adobe.com/flex/spark"
		   horizontalScrollPolicy="off"
		   verticalScrollPolicy="off" xmlns:controls="com.dehats.flex.controls.*">
	
	<mx:Script>
		<![CDATA[
			import com.dehats.sqla.model.AssetManager;
			import com.dehats.sqla.model.presentation.MainPM;
			import com.dehats.sqla.model.presentation.SQLStatementPM;
			
			import mx.events.FlexEvent;
			
			import flashx.textLayout.formats.TextLayoutFormat;
			
			[Bindable]
			public var pm:SQLStatementPM;
			
			
			private function changeListener (e:Event):void {
				var format:TextLayoutFormat = new TextLayoutFormat();
				format.color = 0x000000;      
				statementTa.setFormatOfRange(format, 0, statementTa.text.length);
				
				var reg:RegExp = /\b(union|on|select|from|update|insert|alter|create|delete|set|values|like|join|left|right|inner|outer|where|between|is|ignore|null|and|or|not|table|rename|to|unique|into|view|drop|index)\s/gi;
				var exc:Object;
				//statementTa.text = statementTa.text.toLowerCase();
				statementTa.text = statementTa.text.replace(reg, function(x){return x.toUpperCase();});
				while(exc=reg.exec(statementTa.text))
				{					
					format.color = 0x0026FF;     
					statementTa.setFormatOfRange(format, exc.index, exc.index+exc[0].length);
				}
				
				reg = /\b(sum|abs|changes|char|coalesce|glob|ifnull|instr|hex|last_insert_rowid|length|like|liklihood|likely|lower|ltrim|max|min|nullif|printf|quote|random|randomblob|replace|round|rtrim|soundex|substr|trim|typeof|unlikely|unicode|upper|zeroblob)[(]/gi;
				while(exc=reg.exec(statementTa.text))
				{
					format.color = 0xED18C2;            
					statementTa.setFormatOfRange(format, exc.index, exc.index+exc[0].length-1);
				}
				
				reg = /["'](.*?)["']/gi ;
				while(exc=reg.exec(statementTa.text))
				{
					format.color = 0xff0000;            
					statementTa.setFormatOfRange(format, exc.index, exc.index+exc[0].length);
				}
			}
			
			private function RunSQL():void{
				
				var sqlSelectedString:String = statementTa.text.substring(statementTa.selectionAnchorPosition, statementTa.selectionActivePosition );
				pm.executeStatement((sqlSelectedString.length > 0) ? sqlSelectedString : statementTa.text);
			}
			
			private function onKeyUp(pEvt:KeyboardEvent):void
			{
				if (pEvt.keyCode == Keyboard.F5) {
					RunSQL();
				} 
			}
			
			override protected function updateDisplayList(w:Number, h:Number):void
			{	
				super.updateDisplayList(w, h);
				
				dgResults.setActualSize(w - 20, h - 219);			
			}
			
			
			
		]]>
	</mx:Script>
	
	<mx:Label x="10" y="10" text="Statement"/>			
	
	<s:TextArea id="statementTa" fontSize="14" fontFamily="Consolas"
				keyUp=" onKeyUp(event)" change="changeListener(event)"
				text="{ pm.statement}"
				styleName="statement" 
				y="36" height="135" left="10" right="168"/>
	
	<mx:Label y="10" text="History" right="121"/>
	
	<mx:List id="hist"
			 doubleClickEnabled="true"
			 doubleClick=" statementTa.text = hist.selectedItem.toString()"
			 dataProvider="{ pm.persoStatementHist}"
			 y="36" height="135" right="10" width="150"></mx:List>
	
	<mx:Button y="179" label="Execute (F5)"
			   icon="{ AssetManager.ICON_GEAR_DB}"
			   click=" RunSQL()" x="10"/>
	
	<mx:DataGrid id="dgResults" includeInLayout="{!pm.hasError}" visible="{!pm.hasError}"
				 horizontalScrollPolicy="auto"
				 dataProvider="{ pm.results}"
				 top="209" bottom="10" left="10">
	</mx:DataGrid>
	
	<s:Label text="{pm.error}" includeInLayout="{pm.hasError}" visible="{pm.hasError}" 
			 top="209" bottom="10" right="10" left="10"/>
	
	<mx:Button x="71" y="8" label="Import From SQL File"
			   click=" pm.importSQLFile()"/>
	
	<mx:Button y="8" label="Save in SQL File"
			   click=" pm.exportToFile( escape(statementTa.text))" x="221"/>
	<mx:Label x="175" y="181" text="{pm.results.length+' record(s)'}"/>
	<mx:Label x="273" y="181" text="{pm.results.length+' record(s)'}"/>
</mx:Canvas>
